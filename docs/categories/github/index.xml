<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Github on tlehman@home</title>
    <link>/categories/github/index.xml</link>
    <description>Recent content in Github on tlehman@home</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="/categories/github/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>White House releases first ever open source budget proposal</title>
      <link>/blog/2015/02/03/white-house-releases-first-ever-open-source-budget-proposal/</link>
      <pubDate>Tue, 03 Feb 2015 00:00:00 +0000</pubDate>
      
      <guid>/blog/2015/02/03/white-house-releases-first-ever-open-source-budget-proposal/</guid>
      <description>&lt;p&gt;The White House just released the &lt;a href=&#34;https://github.com/WhiteHouse/2016-budget-data&#34;&gt;first ever open source budget proposal&lt;/a&gt;. It is released on GitHub, and it&amp;rsquo;s a bunch of CSV files. This is not very difficult, it requires only a few extra clicks when exporting an Excel spreadsheet, but hosting it on GitHub also opens it up to &lt;a href=&#34;https://help.github.com/articles/using-pull-requests/&#34;&gt;Pull Requests&lt;/a&gt;, which I&amp;rsquo;ve &lt;a href=&#34;/blog/2013/09/14/viewing-nsa-accountability-act-amendments-as-a-diff/&#34;&gt;talked about before&lt;/a&gt; as being a much better tool for 21st century democracy. Instead of paper and a bunch of politicians in a room following procedure, we should intead have a digital system where all citizens can contribute as easily as they can update a facebook status or apply an instagram filter.&lt;/p&gt;

&lt;p&gt;One huge caveat is in order though: there is no reason to assume that the White House and Congress will even consider pull requests, let alone apply them. This aside, I will experiment with this, I&amp;rsquo;ve already modified &lt;a href=&#34;https://github.com/dinedal/textql/pull/39&#34;&gt;textql&lt;/a&gt; so that I can easily query these CSV files from a SQLite database. If I have an idea about how I&amp;rsquo;d like to change the budget, I&amp;rsquo;ll submit the pull request and then follow it&amp;rsquo;s response, if any.&lt;/p&gt;

&lt;p&gt;Caveats aside, I am impressed with the choice of technologies for making these public issues more accessible.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Probability of getting a numerical SHA-1 hash</title>
      <link>/blog/2012/07/21/probability-of-getting-a-numerical-sha-1-hash/</link>
      <pubDate>Sat, 21 Jul 2012 00:00:00 +0000</pubDate>
      
      <guid>/blog/2012/07/21/probability-of-getting-a-numerical-sha-1-hash/</guid>
      <description>&lt;p&gt;Git uses the &lt;a href=&#34;http://en.wikipedia.org/wiki/SHA-1&#34;&gt;SHA-1 hash function&lt;/a&gt; to ensure the integrity of the data it stores. One important property of this function is that if the input is changed very slightly, the output changes completely. The output is supposed to be indistinguishable from randomness.&lt;/p&gt;

&lt;p&gt;Just yesterday, I was checking a git repository on GitHub, and I noticed
this:&lt;/p&gt;

&lt;p&gt;{% img /images/blogimg/sha1num.png %}&lt;/p&gt;

&lt;p&gt;The 10 character substring of the full SHA-1 hash of the latest commit
happened to be all numerical. How likely is this to happen?&lt;/p&gt;

&lt;p&gt;Well, since good hash functions are supposed to produce output that is indistinguishable from randomness, we can assume they are randomly drawn from the sample space of all 40-character strings over the hexadecimal alphabet {0,1,2,&amp;hellip;,d,e,f}. The probability that a single character chosen from this alphabet is numerical is just &lt;sup&gt;10&lt;/sup&gt;&amp;frasl;&lt;sub&gt;16&lt;/sub&gt;&lt;/p&gt;

&lt;p&gt;Since each of the 40 characters is independent and uniformly distributed, the probability that the entire string is numerical is:&lt;/p&gt;

&lt;p&gt;{% latex %}
  $ \Pi_{i=1}^{40}{\frac{10}{16}} = \left( \frac{10}{16} \right)^{40} = 6.8423 \times 10^{-9} $
{% endlatex %}&lt;/p&gt;

&lt;p&gt;That is 0.0000000068423, that is really small, but also, I was only looking at the first 10 characters, so the probability is going to be bigger, it is (&lt;sup&gt;10&lt;/sup&gt;&amp;frasl;&lt;sub&gt;16&lt;/sub&gt;)&lt;sup&gt;10&lt;/sup&gt; = 0.0090949, or 0.9%. In fact, this is big enough that I should expect to see this every 112 commits.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>