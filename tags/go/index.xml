<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>go on tobilehman.com:~</title>
    <link>https://tobilehman.com/tags/go/</link>
    <description>Recent content in go on tobilehman.com:~</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright 2010-2023 Tobi Lehman. All rights reserved.</copyright>
    <lastBuildDate>Tue, 29 Mar 2022 13:47:55 -0700</lastBuildDate>
    <atom:link href="https://tobilehman.com/tags/go/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Dapper Build tool: consistent builds with docker</title>
      <link>https://tobilehman.com/posts/dapper-build-consistent/</link>
      <pubDate>Tue, 29 Mar 2022 13:47:55 -0700</pubDate>
      <guid>https://tobilehman.com/posts/dapper-build-consistent/</guid>
      <description>This articles shows how to use the dapper build tool from Rancher Labs.&#xA;The basic idea is to use Docker containers, copy* your source files into the container environment, then compile, then copy the build artefacts out.&#xA;(* on Linux you can also use the mount mode to avoid copying the files.)&#xA;How to use it: you start by installing Go so you can compile Dapper. I know, I know, but if you will humor me, I will convince you that Go is the last programming language compiler you will need to install on your host.</description>
    </item>
    <item>
      <title>Latency Numbers Every Programmer Should Know</title>
      <link>https://tobilehman.com/posts/latency-numbers/</link>
      <pubDate>Mon, 28 Feb 2022 16:28:45 -0800</pubDate>
      <guid>https://tobilehman.com/posts/latency-numbers/</guid>
      <description>There&amp;rsquo;s an indispensible file called Latency Numbers Every Programmer Should Know, originally by Jeff Dean of Google. I use a Roam Research plugin to do spaced repetition and memorize these numbers. But memorizing them is not good enough, I should also measure these numbers and see how close the values are in practice.&#xA;I created a Repl in Go to directly measure these numbers. I started with mutex lock/unlock. Locally, I get about 19ns, but the repl gives me between 12-14ns.</description>
    </item>
  </channel>
</rss>
