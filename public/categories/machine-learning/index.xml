<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Machine Learning on Tobi Lehman</title>
    <link>http://tobilehman.com/categories/machine-learning/index.xml</link>
    <description>Recent content in Machine Learning on Tobi Lehman</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="http://tobilehman.com/categories/machine-learning/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Seeing the bulk: a primer on dimensionality reduction</title>
      <link>http://tobilehman.com/post/seeing-the-bulk-a-primer-on-dimensionality-reduction/</link>
      <pubDate>Wed, 12 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>http://tobilehman.com/post/seeing-the-bulk-a-primer-on-dimensionality-reduction/</guid>
      <description>&lt;p&gt;If you haven&#39;t seen Interstellar, you might not get the reference in the title. Don&#39;t sweat it, &lt;a href=&#34;http://interstellarfilm.wikia.com/wiki/Bulk_Beings&#34; title=&#34;&amp;quot;the bulk beings&amp;quot;&#34;&gt;&#34;the bulk beings&#34;&lt;/a&gt; are some advanced civilization that is able to move outside the familiar 3D space that we are stuck in. A similar plot device was used in Edwin Abbott&#39;s book Flatland.&lt;/p&gt;

&lt;p&gt;Outside of entertainment, there is a lot of value in attempting to understand high dimensional spaces. Physics, machine learning, engineering control systems all make use of higher-dimensional spaces in one way or another.&lt;/p&gt;

&lt;p&gt;In this post we will learn how datasets can be thought of as sets of points in a high dimensional space, and then we will learn how to map those sets into low (2 or 3)-dimensional spaces so that we can see them. The goal will be to preserve as much structure as possible, but still fit everything into a space we can see and feel.&lt;/p&gt;

&lt;p&gt;Let&#39;s start with 1D, real numbers are points on a line, easy. In 2D, we can use a pair (x,y) to name any point in a plane. For 3D, we can use triplets (x,y,z) to name points in a space like the one we physically live in.&lt;/p&gt;

&lt;p&gt;If we wanted to name the four corners of a tetrahedron,&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>